{"version":3,"sources":["js/helpers.js","js/calculator.js","index.js"],"names":["calculateRectangle","square","rectangle","difference","x","y","parseFloat","toFixed","addMessage","element","message","isError","classList","add","remove","innerHTML","CalculatorItem","calculator","rectangleX","rectangleY","setVars","setEvents","messageElement","document","querySelector","messages","newValues","notNumber","toBig","addEventListener","e","setValues","target","input","dataset","inputValue","value","parseInt","isNaN","calculate","newValue","Calculator","setItems","initItems","calculators","querySelectorAll","length","forEach"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["const calculateRectangle = (square, rectangle) => {\n\n\tconst difference = square / rectangle.x;\n\n    if(difference <= 1) return false;\n\n    const item = {\n      x: rectangle.x * difference,\n\t\t\ty: parseFloat(rectangle.y * difference).toFixed(2)\n\t\t}\n\t\t\n\t\treturn item;\n}\n\nconst addMessage = (element, message, isError) => {\n\tconst errorClass = 'message--error';\n\tisError ? element.classList.add(errorClass) : element.classList.remove(errorClass)\n\telement.innerHTML = message;\n}\n\nexport { calculateRectangle, addMessage }","import { calculateRectangle, addMessage } from './helpers';\n\nclass CalculatorItem {\n  constructor(calculator) {\n    this.calculator = calculator;\n\n    this.square;\n    this.rectangleX;\n    this.rectangleY;\n\n    if(!this.setVars()) return false;\n    this.setEvents();\n  }\n\n  setVars() {\n    this.messageElement = document.querySelector('[data-calculate-message]')\n    this.messages = {\n      newValues: 'Nowe wartości to',\n      notNumber: 'Można wpisywać tylko cyfry',\n      toBig:     'Prostokąt nie może mieć większych wartości niż kwadrat'\n    }\n\n     return this.messageElement ? true : false;\n  }\n\n  setEvents() {\n    this.calculator.addEventListener('input', e => this.setValues(e.target))\n  }\n\n  setValues(element) {\n\n    const input = element.dataset.input;\n\n    if (!input) return false;\n\n    const inputValue = element.value\n    const value = parseInt(inputValue)\n    \n    if(typeof(value) != 'number' || isNaN(value)) {\n      this[input] = 0;\n      addMessage(this.messageElement, this.messages.notNumber, true)\n      return false;\n    };\n\n    this[input] = value;\n\n    if(!this.square || !this.rectangleX || !this.rectangleY) return false;\n\n    if(this.rectangleX > this.square || this.rectangleY > this.square) {\n      addMessage(this.messageElement, this.messages.toBig, true);\n      return false;\n    }\n\n    this.calculate()\n  }\n\n  calculate() {\n\n    const rectangle = {\n      x: this.rectangleX,\n      y: this.rectangleY\n    }\n    \n    this.newValue = calculateRectangle(this.square, rectangle)\n\n    addMessage(this.messageElement, `${this.messages.newValues}: x: ${this.newValue.x}, y: ${this.newValue.y}`)\n  }\n\n}\n\nexport default class Calculator {\n  constructor() {\n    if(!this.setItems()) return false;\n    this.initItems()\n  }\n\n  setItems() {\n    this.calculators = document.querySelectorAll('[data-calculator]');\n\n    if(this.calculators.length == 0) return false;\n\n    return true;\n  }\n\n  initItems() {\n    this.calculators.forEach(calculator => new CalculatorItem(calculator))\n  }\n}","import Calculator from './js/calculator';\n\nnew Calculator();"]}